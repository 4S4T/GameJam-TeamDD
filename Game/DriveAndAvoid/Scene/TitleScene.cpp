#include "TitleScene.h"
#include "../Utility/InputControl.h"
#include "DxLib.h"

TitleScene::TitleScene() : background_image(NULL), menu_image(NULL), cursor_image(NULL), menu_cursor(0)
{

}

TitleScene::~TitleScene()
{

}

//初期化処理
void TitleScene::Initialize()
{
	//画像の読み込み
	background_image = LoadGraph("Resource/images/road_backimage.png");
	menu_image = LoadGraph("Resource/images/menu.bmp");
	menu_image = LoadDivGraph ("Resource/images/menu.bmp",4,1,4,195,40,gMenu);
	cursor_image = LoadGraph("Resource/images/cat_hand.png");
	font1 = CreateFontToHandle("Elephant", 60, 8, DX_FONTTYPE_ANTIALIASING_EDGE);

	//エラーチェック
	if (background_image == -1)
	{
		throw("Resource/images/Title.bmpがありません/n");
	}
	if (menu_image == -1)
	{
		throw("Resource/images/menu.bmpがありません/n");
	}
	if (cursor_image == -1)
	{
		throw("Resource/images/cone.bmpがありません/n");
	}
}

//更新処理
eSceneType TitleScene::Update()
{
	//カーソル下移動
	if (InputControl::GetButtonDown(XINPUT_BUTTON_DPAD_DOWN))
	{
		menu_cursor++;

		//一番下に到達したら、一番上にする
		if (menu_cursor > 2)
		{
			menu_cursor = 0;
		}
	}

	//カーソル上移動
	if (InputControl::GetButtonDown(XINPUT_BUTTON_DPAD_UP))
	{
		menu_cursor--;

		//一番上に到達したら、一番下にする
		if (menu_cursor < 0)
		{
			menu_cursor = 2;
		}
	}

	//カーソル決定（決定した画面に遷移する）
	if (InputControl::GetButtonDown(XINPUT_BUTTON_B))
	{
		switch (menu_cursor)
		{
		case 0:
			return eSceneType::E_MAIN;
		case 1:
			return eSceneType::E_RANKING_DISP;
		/*case 2:
			return eSceneType::E_HELP;*/
		default:
			return eSceneType::E_END;

		}
	}

	//現在のシーンタイプを返す
	return GetNowScene();
}
 
//描画処理
void TitleScene::Draw() const
{
	//タイトル画像の描画
	DrawGraph(0, 0, background_image, FALSE);
	//メニュー画像の描画
	DrawGraph(120, 200, menu_image, TRUE);

	DrawGraph(140, 300, gMenu[0], TRUE);
	DrawGraph(140, 340, gMenu[1], TRUE);
	DrawGraph(140, 380, gMenu[3], TRUE);

	//カーソル画像の描画
	DrawRotaGraph(100, 320 + menu_cursor * 40, 0.7, DX_PI / 2.0, cursor_image, TRUE);

	DrawStringToHandle(150, 100, "Getyu~ru", 0xffec47, font1);
}

//終了時処理
void TitleScene::Finalize()
{
	//読み込んだ画像の削除
	DeleteGraph(background_image);
	DeleteGraph(menu_image);
	DeleteGraph(gMenu[0]);
	DeleteGraph(gMenu[1]);
	DeleteGraph(gMenu[2]);
	DeleteGraph(gMenu[3]);
	DeleteGraph(cursor_image);
}

//現在のシーン情報を取得
eSceneType TitleScene::GetNowScene() const
{
	return eSceneType::E_TITLE;
}